;; -*- mode: scheme; -*-

(define (stroke-pie ctx x y time max-time)
  (ctx.beginPath)
  (ctx.moveTo x y)
  (ctx.arc
   x y 50 (+ (* Math.PI -0.5)
             (/ (* time Math.PI 2) max-time))
   (* Math.PI -0.5)
   true)
  (ctx.closePath))

(define (draw-pie ctx x y time max-time r g b)
  (stroke-pie ctx (+ x 3) (+ y 3) max-time max-time)
  (set! ctx.fillStyle "#000")
  (ctx.fill)

  (stroke-pie ctx x y time max-time)
  (set! ctx.fillStyle (string-append "rgba(" (Math.floor r) ", "
                                     (Math.floor g) ", "
                                     (Math.floor b) ", 1.0)"))
  (ctx.fill)

  (set! ctx.lineWidth 1)
  (set! ctx.fillStyle "#fff")
  (set! ctx.font "normal 30pt gnuolane")
  (ctx.fillText (Math.floor time) x (+ y 20))
  )

(define (draw-chromosome ctx x y chromo)
  (index-for-each
   (lambda (i gene)
     (set! ctx.fillStyle "#fff")
     (set! ctx.font "normal 20pt gnuolane")
     (ctx.fillText (allele-id (car gene)) x (+ y (- (* i 40) 10)))
     (set! ctx.fillStyle "#000")
     (ctx.fillRect x (+ y (* i 40)) 200 10)
     (set! ctx.fillStyle "#0ff")
     (ctx.fillRect x (+ y (* i 40)) (* 200 (allele-probability (car gene))) 10)
     )
   chromo)
  )

(define (draw-flash ctx x y rad r g b a)
  (ctx.beginPath)
  (ctx.arc x y rad 0 (* Math.PI 2) true)
  (ctx.closePath)
  (let ((grd (ctx.createRadialGradient x y 50 x y 100)))
    (grd.addColorStop 0 (string-append "rgba(0, 255, 0, " a ")"))
    (grd.addColorStop 1 (string-append "rgba(255, 255, 0, 0.0)"))
    (set! ctx.fillStyle grd)
    (ctx.fill)))

(define (make-gobble x y)
  (set! gobble-x x)
  (set! gobble-y y)
  (set! gobble-t 0))

(define gobble-x 0)
(define gobble-y 0)
(define gobble-t 1)

(define (draw-gobble ctx)
  (when (< gobble-t 1)
        (ctx.beginPath)
        (ctx.arc gobble-x gobble-y
                 (* (- 1 gobble-t) 100)
                 0 (* Math.PI 2) true)
        (ctx.closePath)
        (let ((grd (ctx.createRadialGradient
                    gobble-x gobble-y (* (- 1 gobble-t) 10)
                    gobble-x gobble-y (* (- 1 gobble-t) 100))))
          (grd.addColorStop 0 (string-append "rgba(0, 155, 0, " a ")"))
          (grd.addColorStop 1 (string-append "rgba(255, 255, 0, 0.0)"))
          (set! ctx.fillStyle grd)
          (ctx.fill))
        (set! gobble-t (+ gobble-t 0.2))))
